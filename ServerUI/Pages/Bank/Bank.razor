@page "/bank"
@using Framework.Toasts;
@using ServerUI.Infrastructure.ResultModels;
@using ServerUI.Pages.Bank.Components
@using ServerUI.Pages.Bank.Services;
@using ServerUI.Shared.Components.Apps
@using ViewModels.Banks;

@inject BankService service
@inject ToastMessage _message;

<h3>@(Resources.DataDictionary.Banks)</h3>

<div class="py-2" dir="ltr">
	<Toolbar 
		OnAddClick="OpenNewForm" 
		OnRefreshClick="@(async () => await _bankGrid.FetchData())"
		OnDeleteClick="@(async () => await _bankGrid.DeleteSelectedRows())"
		canDelete="_canDelete" />
</div>

<div class="py-2">
	<CascadingValue Value="this">

		<BankGrid @ref="_bankGrid" />

	</CascadingValue>
</div>

<Modal Title="@(_formMode == 1
        ? string.Concat(Resources.DataDictionary.Add," ",Resources.DataDictionary.Bank)
        : string.Concat(Resources.DataDictionary.Edit," ",Resources.DataDictionary.Bank))"

       Visible="@(ShowModal)"
       OnOk="@(OnSubmit)"
	   OnCancel="@(OnCancel)"
	   Width="800">

	<CascadingValue Value="this">
		<BankForm @ref="_bankForm" />
	</CascadingValue>

</Modal>

@code {
    BankForm _bankForm = new();
    BankGrid _bankGrid = new();
    bool _canDelete = false;
    public bool ShowModal = false;
    public byte _formMode = 0;

    public void CheckforSelection()
    {
        _canDelete = _bankGrid.SelectedRows.Any();
        StateHasChanged();
    }

    public void OpenNewForm()
    {
        _bankForm.model = new BankViewModel();
        ShowModal = true;
        _formMode = 1;
    }

    public void OpenEditForm(BankViewModel model)
    {
        _bankForm.model = model;
        ShowModal = true;
        _formMode = 2;
        StateHasChanged();
    }

    public async Task Fetchdata()
    {
        await _bankGrid.FetchData();
    }

    async Task OnSubmit()
    {
        var res = new Response();
        if (_formMode == 1)
        {
             res = await service.PostAsync<BankViewModel, Response>("create", _bankForm.model);
        }
        else if (_formMode == 2)
        {
             res = await service.PatchAsync<BankViewModel, Response>("update", _bankForm.model);
        }

        ShowModal = false;

        Task.Run(async () => await _message.Show(res));

        await Fetchdata();
    }

    void OnCancel()
    {
        ShowModal = false;

    }
}


